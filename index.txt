require('dotenv').config();
const express = require('express');
const axios = require('axios');
const crypto = require('crypto');

const app = express();
const PORT = 3000;

// ✅ Load Tokocrypto API credentials from .env
const API_KEY = process.env.API_KEY;
const SECRET_KEY = process.env.SECRET_KEY;
const BASE_URL = "https://www.tokocrypto.com";

// 📌 API route to fetch asset details
app.get('/get-asset', async (req, res) => {
    try {
        // ✅ Generate timestamp
        const asset = 'IDR';
        const timestamp = Date.now();
        const recvWindow = 5000;

        const queryString = `asset=${asset}&timestamp=${timestamp}&recvWindow=${recvWindow}`;

        const signature = crypto
        .createHmac('sha256', SECRET_KEY)  // Use Node.js built-in crypto module
        .update(queryString)
        .digest('hex');

        const finalUrl = `${BASE_URL}/open/v1/account/spot/asset?${queryString}&signature=${signature}`;

        const headers = {
            'X-MBX-APIKEY': API_KEY,
            'Accept': '*/*',
            'Accept-Encoding': 'gzip, deflate, br',
            'Connection': 'keep-alive',
        };

        console.log("🔍 Final Request URL:", finalUrl);
        console.log("📝 Generated Signature:", signature);

        // ✅ Make API request
        const response = await axios.get(finalUrl, { headers });

        // ✅ Send response back to client
        res.json(response.data);
    } catch (error) {
        console.error("❌ Error calling API:", error.response ? error.response.data : error.message);
        res.status(500).json({ error: error.response ? error.response.data : error.message });
    }
});

// ✅ Start Express server
app.listen(PORT, () => {
    console.log(`🚀 Server running on http://localhost:${PORT}`);
});
